{"version":3,"sources":["Components/ImageHolder.js","Components/Model.js","Components/AppWindow.js","App.js","reportWebVitals.js","index.js"],"names":["ImageHolder","setSelectImage","likeClicked","commentClicked","setLikeClicked","setCommentClicked","searchTerm","useState","data","setData","comment","setComment","useEffect","a","axios","get","result","pics","map","item","liked","sort","b","likes","comments","length","className","filter","category","toLowerCase","includes","onClick","url","src","alt","id","e","stopPropagation","newData","likeHandler","onChange","sid","obj","target","value","handleClick","placeholder","handlePostclick","Model","selectImage","console","log","AppWindow","setsearchTerm","term","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26893799.chunk.js","sourcesContent":["import React , {useState , useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './imageholder.css'\r\n\r\nfunction ImageHolder({setSelectImage,likeClicked,commentClicked,setLikeClicked,setCommentClicked,searchTerm}) {\r\nconst [data, setData] = useState([])\r\nconst [filteredData ,setFilteredData] = useState([]);\r\nconst [likeUnlike, setLikeUnlike] = useState(\"Like\")\r\nconst[comment,setComment] = useState(\"\");\r\nlet [likeCount, setLikeCount] = useState(0)\r\nuseEffect (async() => {\r\n    let result = await axios.get(\"https://raw.githubusercontent.com/Lokenath/MyRepo/master/Test/package.json\")\r\n    setData(result.data.pics.map((item)=>{\r\n        return {\r\n            ...item,\r\n            liked: false\r\n        }\r\n    }))\r\n},[])\r\n\r\nlet handleClick = (e,id) =>\r\n{let sid = id;\r\n    let obj = {...comment};\r\n    obj[sid]=e.target.value;\r\n    e.stopPropagation();\r\n    setComment(obj);\r\n}\r\n\r\nlet handlePostclick = (e,id) => \r\n{\r\n    e.stopPropagation();\r\n    let newData = data.map((item)=>{\r\n        if(item.id==id)\r\n        {\r\n            return {\r\n                ...item,\r\n                comments:[...item.comments,comment[item.id]]\r\n            }\r\n          \r\n        }\r\n        else{\r\n            return {\r\n                ...item\r\n            }\r\n        }\r\n    })\r\n    setData(newData);\r\n    let obj = {...comment};\r\n    obj[id]=\"\";\r\n    setComment(obj);\r\n}\r\nconst likeHandler = (e,id) => {\r\n    e.stopPropagation()\r\n    let newData = [...data].map((item)=>{\r\n        if(item.id == id)\r\n        {\r\n            return {\r\n                ...item,\r\n                likes: !item.liked == true ? item.likes+1 : item.likes-1,\r\n                liked: !item.liked\r\n            }\r\n        }else{\r\n            return {\r\n                ...item\r\n            }\r\n        }\r\n    })\r\n    setData(newData);\r\n}\r\n\r\nuseEffect(()=>{\r\n\r\n    if(likeClicked==true)\r\n    {\r\n        setData(  [...data].sort((a,b)=>{\r\n            return b.likes-a.likes\r\n    }))\r\nsetLikeClicked(false)\r\n}},[likeClicked])\r\nuseEffect(()=> {\r\n    if(commentClicked===true){\r\n        setData([...data].sort((a,b)=>{\r\n            return b.comments.length-a.comments.length\r\n        }))\r\n    }\r\n    setCommentClicked(false)\r\n},[commentClicked])\r\n\r\n    return (\r\n        <div className = 'grid'>\r\n            {data.filter((item)=>{\r\n                if(item.category.toLowerCase().includes(searchTerm.toLowerCase()))\r\n                {\r\n                    return true\r\n                }}).map((item)=> {\r\n                return (\r\n                    <div className=\"card-container\" key = {item.id} onClick = {() => setSelectImage(item.url)}>\r\n                        <div>\r\n                        <img src={item.url} className=\"image\" alt= 'image' key={item.id}/> \r\n                        </div>\r\n                        <div>\r\n                        <div> \r\n                            <div className=\"likes-container\">\r\n                            <p className=\"likes\" >{item.likes}</p>\r\n                            <p className=\"likes-text\" onClick = {(e) => likeHandler(e,item.id)}>\r\n                                <u>{item.liked ? \"Unlike\" : \"Like\"}</u></p>\r\n                            <p className=\"item-category\">{item.category} </p>\r\n                            </div>\r\n                        </div>\r\n                        <input onChange={(e)=>{handleClick(e,item.id)}} \r\n                        onClick={(e)=>{e.stopPropagation()}} \r\n                        value={comment[item.id]} \r\n                        placeholder = 'Type of your comment here...'\r\n                        className=\"input-box\"></input>\r\n\r\n                        <button onClick={(e)=>{handlePostclick(e,item.id)}}>Post</button>\r\n\r\n                        {item.comments.map((item)=>{\r\n                            return <p className=\"comment-style\">{item}</p>\r\n                        })}\r\n                    </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default ImageHolder\r\n","import React from 'react'\r\nimport './model.css'\r\nconst Model = ({selectImage , setSelectImage})  => {\r\n    console.log(selectImage)\r\n    const handleClick = (e) => {\r\n        setSelectImage(null)\r\n    }\r\n    return (\r\n        <div className = 'backdrop' onClick = {handleClick}>\r\n            <img src = {selectImage} alt = 'enlarged image' />\r\n        </div>\r\n    )\r\n}\r\nexport default Model","import React , {useState} from 'react'\r\nimport './AppWindow.css'\r\nimport ImageHolder from './ImageHolder'\r\nimport Model from './Model'\r\nimport Comment from './Comment'\r\nfunction AppWindow() {\r\n    const [selectImage, setSelectImage] = useState(null);\r\n    const [likeClicked , setLikeClicked] = useState(false);\r\n    const [commentClicked , setCommentClicked] = useState(false);\r\n    const [searchTerm, setsearchTerm] = useState(\"\");\r\n    \r\n\r\n    let handleSearchChange = (e) => \r\n    {\r\n        let term = e.target.value;\r\n        setsearchTerm(term);\r\n    }\r\nreturn (\r\n        <div className = 'AppWindow'>\r\n           <div className = 'heading'><h3>Imaginary</h3></div>\r\n            <div className = 'nav-options'>\r\n            <div className=\"nav-flex\"><p onClick={()=>{setLikeClicked(true)}}><u>Most Liked</u></p> </div>\r\n            <div  className=\"nav-flex\"><p onClick={()=>{setCommentClicked(true)}}><u>Most Commented</u></p></div>\r\n            <div className=\"nav-search-flex\"><input value={searchTerm} onChange={handleSearchChange} placeholder = 'Search images...'\r\n            className = 'search-box'></input></div>        \r\n            </div>\r\n            \r\n            <ImageHolder \r\n            searchTerm={searchTerm}\r\n            likeClicked={likeClicked}\r\n            setLikeClicked = {setLikeClicked}\r\n            commentClicked = {commentClicked} \r\n            setCommentClicked = {setCommentClicked}\r\n            setSelectImage = {setSelectImage} />\r\n\r\n            {selectImage && <Model selectImage = {selectImage} setSelectImage = {setSelectImage}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppWindow\r\n","import './App.css'\nimport AppWindow from './Components/AppWindow'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppWindow/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}